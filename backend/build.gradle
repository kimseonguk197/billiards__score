plugins {
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'org.jetbrains.kotlin.kapt' version '1.3.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.21'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.21'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'io.zensoft.versioning' version '1.1.0'
}

apply plugin: 'io.spring.dependency-management'

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-freemarker')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-cache')

    // Util
    implementation('org.apache.commons:commons-lang3:3.7')
    implementation('commons-io:commons-io:2.6')
    implementation('net.coobird:thumbnailator:0.4.8')
    implementation('com.github.ben-manes.caffeine:caffeine:2.6.2')

    // Swagger
    implementation('io.springfox:springfox-swagger2:2.9.0')
    implementation('io.springfox:springfox-swagger-ui:2.9.0')
    implementation('org.webjars:swagger-ui:3.17.0')

    // Database
    implementation('org.flywaydb:flyway-core')
    runtimeOnly('org.postgresql:postgresql')

    // Kotlin
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    implementation('org.jetbrains.kotlin:kotlin-reflect')

    // DevTools
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    kapt('org.springframework.boot:spring-boot-configuration-processor')

    // Test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.resources.srcDirs += '../frontend/build/resources'
}

// Front
processResources.dependsOn(':frontend:assemble')


compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}